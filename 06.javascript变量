1.变量是存储信息的容器。

实例：

<script>
var x=2;
var y=3;
var z=2+3;

document.write(x + "<br>");
document.write(y + "<br>");
document.write(z + "<br>");
</script>

JavaScript 变量可用于存放值（比如 x=2）和表达式（比如 z=x+y）。

变量必须以字母开头
变量也能以 $ 和 _ 符号开头（不过我们不推荐这么做）

2.JavaScript 数据类型

我们只关注数字和字符串。

当您向变量赋的值是数值时，不要使用引号。如果您用引号包围数值，该值会被作为文本来处理。
当您向变量赋的值是数值时，不要使用引号。如果您用引号包围数值，该值会被作为文本来处理。
当您向变量赋的值是数值时，不要使用引号。如果您用引号包围数值，该值会被作为文本来处理。
当您向变量赋的值是数值时，不要使用引号。如果您用引号包围数值，该值会被作为文本来处理。



var pi=3.14;
var name="Bill Gates";
var answer='Yes I am!';

3.实例

<p>点击这里来创建变量，并显示结果。</p>

<button onclick="myFunction()">点击这里</button>

<p id="demo"></p>

<script>
function myFunction()
{
var carname="Volvo";
document.getElementById("demo").innerHTML=carname;
}
</script>

4.
您可以在一条语句中声明很多变量。该语句以 var 开头，并使用逗号分隔变量即可：
您可以在一条语句中声明很多变量。该语句以 var 开头，并使用逗号分隔变量即可：
您可以在一条语句中声明很多变量。该语句以 var 开头，并使用逗号分隔变量即可：
您可以在一条语句中声明很多变量。该语句以 var 开头，并使用逗号分隔变量即可：


var name="Gates", age=56, job="CEO";

or
var name="Gates",
age=56,
job="CEO";

5.重新声明 JavaScript 变量

如果重新声明 JavaScript 变量，该变量的值不会丢失：
如果重新声明 JavaScript 变量，该变量的值不会丢失：
如果重新声明 JavaScript 变量，该变量的值不会丢失：
如果重新声明 JavaScript 变量，该变量的值不会丢失：



在以下两条语句执行后，变量 carname 的值依然是 "Volvo"：
var carname="Volvo";
var carname;

6.strict模式

在同一个页面的不同的JavaScript文件中，如果都不用var申明，恰好都使用了变量i，将造成变量i互相影响，产生难以调试的错误结果。

如果一个变量没有通过var申明就被使用，那么该变量就自动被申明为全局变量：

为了修补JavaScript这一严重设计缺陷，ECMA在后续规范中推出了strict模式
在strict模式下运行的JavaScript代码，强制通过var申明变量，未使用var申明变量就使用的，将导致运行错误。

启用strict模式的方法是在JavaScript代码的第一行写上：

'use strict';


不用var申明的变量会被视为全局变量，为了避免这一缺陷，所有的JavaScript代码都应该使用strict模式。我们在后面编写的JavaScript代码将全部采用strict模式。





UPDATE BY SHENGKAI 2017-6-6 00:41




















