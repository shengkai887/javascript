

字符串、数字、布尔、数组、对象、Null、Undefined


------------------------------------------------------------------------------------

1.JavaScript 拥有动态类型，这意味着相同的变量可用作不同的类型

var x                // x 为 undefined
var x = 6;           // x 为数字
var x = "Bill";      // x 为字符串

2.JavaScript 字符串

字符串是存储字符（比如 "Bill Gates"）的变量。
字符串可以是引号中的任意文本。您可以使用单引号或双引号：

var carname="Bill Gates";
var carname='Bill Gates';

3.JavaScript 数字
JavaScript 只有一种数字类型。数字可以带小数点，也可以不带：

var x1=34.00;      //使用小数点来写
var x2=34;         //不使用小数点来写
var y=123e5;      // 12300000
var z=123e-5;     // 0.00123


4.JavaScript 布尔
布尔（逻辑）只能有两个值：true 或 false。

var x=true
var y=false

5.JavaScript 数组

var cars=new Array();
cars[0]="Audi";
cars[1]="BMW";
cars[2]="Volvo";

or

var cars=new Array("Audi","BMW","Volvo");

实例测试：

<script>  
var i;   
var cars=new Array();
cars[0]="audi";
cars[1]="bmw";
cars[2]="volvo";
             
for (i=0;i<cars.length;i++)
{
document.write(cars[i] + "<br>");
}   
    
</script>


6.JavaScript 对象
对象由花括号分隔。在括号内部，对象的属性以名称和值对的形式 (name : value) 来定义。属性由逗号分隔：

var person={firstname:"Bill", lastname:"Gates", id:5566};

or

var person={
firstname : "Bill",
lastname  : "Gates",
id        :  5566
};

对象属性有两种寻址方式：
name=person.lastname;
name=person["lastname"];

实例：
<script>
var owen= {
        fristname:"owen",
        lastname:"dede",
        id:888

};

document.write(owen.fristname + "<br />");
document.write(owen["fristname"] + "<br />");

</script>

7.
Undefined 这个值表示变量不含有值。
可以通过将变量的值设置为 null 来清空变量。


8.声明变量类型
当您声明新变量时，可以使用关键词 "new" 来声明其类型：
var carname=new String;
var x=      new Number;
var y=      new Boolean;
var cars=   new Array;
var person= new Object;

JavaScript 变量均为对象。当您声明一个变量时，就创建了一个新的对象。




UPDATE BY HUBERT 2017-6-6  1:03 AM













