JavaScript 错误 - Throw、Try 和 Catch

try 语句测试代码块的错误
catch 语句处理错误。
throw 语句创建自定义错误。




1.JavaScript 抛出错误

当错误发生时，当事情出问题时，JavaScript 引擎通常会停止，并生成一个错误消息。

描述这种情况的技术术语是：JavaScript 将抛出一个错误。



2.JavaScript 测试和捕捉
try 语句允许我们定义在执行时进行错误测试的代码块。
catch 语句允许我们定义当 try 代码块发生错误时，所执行的代码块。
JavaScript 语句 try 和 catch 是成对出现的。


语法

try
  {
  //在这里运行代码
  }
catch(err)
  {
  //在这里处理错误
  }



实例：

在下面的例子中，我们故意在 try 块的代码中写了一个错字。

catch 块会捕捉到 try 块中的错误，并执行代码来处理它。

<html>
<head>
<script>

var txt="";
function message() {
try
  {
        allert("Welcome guest!!!");
  }
catch(err)
  {
        txt="There was an error on this page..\n\n";
        txt+="Error description: " + err.message + "\n\n";
        txt+="Click ok to continue...\n\n";
        alert(txt);
  }
}


</script>
</head>
<body>

<input type="button" value="view message" onclick="message()">


</body>
</html>


try代码执行有问题时会自动执行catch代码，try代码执行正常，catch代码不会被执行




3.Throw 语句
throw 语句允许我们创建自定义错误。
正确的技术术语是：创建或抛出异常（exception）。
如果把 throw 与 try 和 catch 一起使用，那么您能够控制程序流，并生成自定义的错误消息。

语法：

throw exception


异常可以是 JavaScript 字符串、数字、逻辑值或对象。

实例：

检测输入变量的值。如果值是错误的，会抛出一个异常（错误）。catch 会捕捉到这个错误，并显示一段自定义的错误消息

<!DOCTYPE html>
<html>
<body>

<script>
function myFunction() {
  try
  {
        var x=document.getElementById("demo").value;
        if(x=="") throw "NULL INPUT";
        if(isNaN(x)) throw "NOT NUM";
        if(x>10) throw "BIGER";
        if(x<5) throw "SMALL";
  }
  catch(err)
  {
        var y=document.getElementById("mess");
        y.innerHTML="error: " +err+".";
  }
}

</script>
<h1>This is my FRSIT javascript program.... </h1>
<p>PLS INPUT NUM BETWEEN 5-10... </p>
<input id="demo" type="text">
<button type="button" onclick="myFunction()">INPUT_NUM_TEST</button>
<p id="mess"> </p>

</body>


</html>



UPDATE BY SHENGKAI 2017-6-7 1：32 AM










