RegExp 对象用于规定在文本中检索的内容。

RegExp 是正则表达式的缩写。

当您检索某个文本时，可以使用一种模式来描述要检索的内容。RegExp 就是这种模式。

1.定义 RegExp

RegExp 对象用于存储检索模式。

通过 new 关键词来定义 RegExp 对象。以下代码定义了名为 patt1 的 RegExp 对象，其模式是 "e"：

var patt1=new RegExp("e");

当您使用该 RegExp 对象在一个字符串中检索时，将寻找的是字符 "e"。


2.RegExp 对象的方法

RegExp 对象有 3 个方法：test()、exec() 以及 compile()。

2.1test() 方法检索字符串中的指定值。返回值是 true 或 false。

实例：
var patt1=new RegExp("e");
document.write(patt1.test("The best things in life are free")); 
由于该字符串中存在字母 "e"，以上代码的输出将是：
true


2.2exec() 方法检索字符串中的指定值。返回值是被找到的值。如果没有发现匹配，则返回 null。

实例：
var patt1=new RegExp("e");
document.write(patt1.exec("The best things in life are free")); 
由于该字符串中存在字母 "e"，以上代码的输出将是：
e

实例2：
您可以向 RegExp 对象添加第二个参数，以设定检索。例如，如果需要找到所有某个字符的所有存在，则可以使用 "g" 参数 ("global")。
在使用 "g" 参数时，exec() 的工作原理如下：

    找到第一个 "e"，并存储其位置
    如果再次运行 exec()，则从存储的位置开始检索，并找到下一个 "e"，并存储其位置


var patt1=new RegExp("e","g");
do
{
result=patt1.exec("The best things in life are free");
document.write(result);
}
while (result!=null) 


由于这个字符串中 6 个 "e" 字母，代码的输出将是：

eeeeeenull


2.3compile()
compile() 方法用于改变 RegExp。

compile() 既可以改变检索模式，也可以添加或删除第二个参数。


var patt1=new RegExp("e");

document.write(patt1.test("The best things in life are free"));

patt1.compile("d");

document.write(patt1.test("The best things in life are free"));

由于字符串中存在 "e"，而没有 "d"，以上代码的输出是：

truefalse



UPDATE BY HUBERT 2017-6-8 3:51 AM 














