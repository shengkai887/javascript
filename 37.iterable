
遍历Array可以采用下标循环，遍历Map和Set就无法使用下标。为了统一集合类型，ES6标准引入了新的iterable类型，Array、Map和Set都属于iterable类型。

具有iterable类型的集合可以通过新的for ... of循环来遍历。


用for ... of循环遍历集合，用法如下：

for ... in循环由于历史遗留问题，它遍历的实际上是对象的属性名称。一个Array数组实际上也是一个对象，它的每个元素的索引被视为一个属性。

当我们手动给Array对象添加了额外的属性后，for ... in循环将带来意想不到的意外效果：

var a = ['A', 'B', 'C'];
a.name = 'Hello';
for (var x in a) {
    alert(x); // '0', '1', '2', 'name'
}

for ... in循环将把name包括在内，但Array的length属性却不包括在内。

for ... of循环则完全修复了这些问题，它只循环集合本身的元素：

var a = ['A', 'B', 'C'];
a.name = 'Hello';
for (var x of a) {
    alert(x); // 'A', 'B', 'C'
}

这就是为什么要引入新的for ... of循环。

更好的方式是直接使用iterable内置的forEach方法，它接收一个函数，每次迭代就自动回调该函数。

--------------------------------------------------------------------------------------------------------------------------------------------------
上面的实例太少，网上推荐的文章地址如下，学习记录如下：

http://bubkoo.com/2015/06/15/es6-in-depth-iterators-and-the-for-of-loop/


XDDD，发现上面都是精华内容，速度学习，这里到这里即可。

----------------------------------------------------------------------------------------------------------------------------------------------------



UPDATE BY SHENGKAI 2017-6-23   19:54






















